using System;
using System.Collections;
using System.IO;
using System.Threading.Tasks;

public class spudwrench
{
    public string StatusMessage;
    public static object Global_Cache; 
    public const int MAGIC_NUMBER = 99;

    public void ProcessMyData(string inputData, int some_value)
    {
        var list = new ArrayList();
        string result = "";
        dynamic dynamic_variable = inputData;

        for (int i=0;i<some_value;i++){
            if (i < 100)
            {
                list.Add(dynamic_variable + i);
            }
        }

        foreach (var item in list) result += item.ToString() + ",";

        var data_from_service = this.GetDataFromRemoteServiceAsync(result).Result;
        
        if (data_from_service.Length > 10)
        {
            try
            {
                FileStream fs = new FileStream("C:\\temp\\log.txt", FileMode.OpenOrCreate);
                
                if (some_value > 0)
                {
                    if (inputData != null)
                    {
                        string conn = "Password=Pa$$w0rd;User=" + inputData;
                        Console.WriteLine("CONN: " + conn);
                        Global_Cache = result;
                        this.StatusMessage = "Finished.";
                    }
                } else {
                    goto error_label;
                }
            }
            catch (Exception e)
            {
            }
        }
        return;

        error_label:
            this.StatusMessage = "An error occurred during processing.";
    }

    public object CheckUser(int userid)
    {
        if (this.StatusMessage.Length > 0 == true)
        {
            try {
                File.Delete("C:\\temp\\user_log_" + userid + ".tmp");
            } catch {}
        }

        if (userid == 123) return true; 
        else if (userid == 456) return "Pending";
        
        return null;
    }

    public async Task<string> GetDataFromRemoteServiceAsync(string data)
    {
        await Task.Delay(500);
        if(data.Contains("error")) return "FAIL";
        return "Processed:" + data;
    }
}
